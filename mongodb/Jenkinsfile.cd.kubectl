// Jenkinsfile-mongodb-deploy
pipeline {
    agent any
    
    environment {
        AWS_REGION = 'ap-southeast-1'
        CLUSTER_NAME = 'demo-01'
        NAMESPACE = 'demo'
    }
    
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        
        stage('Configure kubectl') {
            steps {
                script {
                    withAWS(credentials: 'aws-credentials', region: AWS_REGION) {
                        sh "aws eks update-kubeconfig --name ${CLUSTER_NAME} --region ${AWS_REGION}"
                    }
                }
            }
        }
        
        stage('Deploy MongoDB to EKS') {
            steps {
                script {
                    withAWS(credentials: 'aws-credentials', region: AWS_REGION) {
                        // Create namespace if it doesn't exist
                        sh "kubectl create namespace ${NAMESPACE} --dry-run=client -o yaml | kubectl apply -f -"
                        
                        // Apply Kubernetes manifests in order
                        sh """
                            # Apply Service
                            kubectl apply -f mongodb/kubernetes/service.yaml -n ${NAMESPACE}
                            
                            # Apply Deployment
                            kubectl apply -f mongodb/kubernetes/deployment.yaml -n ${NAMESPACE}
                            
                            # Wait for rollout to complete
                            kubectl rollout status deployment/mongodb -n ${NAMESPACE}
                        """
                    }
                }
            }
        }
        
        stage('Verify MongoDB Deployment') {
            steps {
                script {
                    withAWS(credentials: 'aws-credentials', region: AWS_REGION) {
                        sh """
                            
                            echo 'Checking Service:'
                            kubectl get svc mongodb-service -n ${NAMESPACE}
                            
                            echo 'Checking Deployment and Pods:'
                            kubectl get deployment mongodb -n ${NAMESPACE}
                            kubectl get pods -l app=mongodb -n ${NAMESPACE}
                        """
                    }
                }
            }
        }
    }
}